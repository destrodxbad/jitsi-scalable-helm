{{- if .Values.haproxy.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "jitsi.fullname" . }}-haproxy
  labels:
    {{- include "jitsi.labels" . | nindent 4 }}
    jitsi/component: haproxy
spec:
  replicas: 2
  serviceName: {{ include "jitsi.fullname" . }}-haproxy-headless
  selector:
    matchLabels:
      {{- include "jitsi.selectorLabels" . | nindent 6 }}
      jitsi/component: haproxy
  template:
    metadata:
      annotations:
        checksum/privateconfig: {{ include (print $.Template.BasePath "/haproxy/configmap.yaml") . | sha256sum }}
        {{- with .Values.haproxy.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "jitsi.selectorLabels" . | nindent 8 }}
        jitsi/component: haproxy
    spec:
      {{- with .Values.haproxy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: haproxy
          configMap:
            name: {{ include "jitsi.fullname" . }}-haproxy
            items:
              - key: haproxy.cfg
                path: haproxy.cfg
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.haproxy.image.repository }}:{{ .Values.haproxy.image.tag | default "2.1" }}"
          imagePullPolicy: {{ .Values.haproxy.image.pullPolicy }}
          command: ["bash", "-c"]
          {{- $peer0 := printf "%s-%s" (include "jitsi.fullname" .) "haproxy-0" }}
          {{- $peer1 := printf "%s-%s" (include "jitsi.fullname" .) "haproxy-1" }}
          args:
            - >-
              apt-get update && apt-get install -y dnsutils;
              [[ $HOSTNAME = '{{ $peer1 }}' ]] &&
              export OTHER_HOSTNAME={{ $peer0 }} OTHER_IP=$(nslookup {{ $peer0 }}.{{ include "jitsi.fullname" . }}-haproxy-headless | awk 'NR==5 {print $2}') ||
              export OTHER_HOSTNAME={{ $peer1 }} OTHER_IP=$(nslookup {{ $peer1 }}.{{ include "jitsi.fullname" . }}-haproxy-headless | awk 'NR==5 {print $2}');
              exec /docker-entrypoint.sh haproxy -f /usr/local/etc/haproxy/haproxy.cfg
          livenessProbe:
            httpGet:
              port: 80
          readinessProbe:
            httpGet:
              port: 80
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
            - name: peering
              containerPort: 1024
              protocol: TCP
          volumeMounts:
            - name: haproxy
              mountPath: /usr/local/etc/haproxy/haproxy.cfg
              subPath: haproxy.cfg
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
            {{- toYaml .Values.haproxy.resources | nindent 12 }}
      {{- with .Values.haproxy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.haproxy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.haproxy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}